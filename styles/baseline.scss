/*
  Copyright 2022 the Baseline Authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

@use 'sass:color' as sass-color;

@use 'badges';
@use 'bootstrap';
@use 'code';
@use 'hljs';
@use 'navbar';
@use 'themes/hljs/tomorrow';
@use 'toc';
@use 'variables/colors';
@use 'variables/fonts';
@use 'variables/spacers';

@mixin clearfix() {
  &::after {
    display: block;
    clear: both;
    content: '';
  }
}

:root {
  --navbar-scroll-margin: #{navbar.$height + spacers.$medium};
  --navbar-scroll-margin-large: #{navbar.$height + spacers.$xx-large};
}

html {
  position: relative;
  height: 100%;
}

body {
  display: flex;
  flex-flow: column;
  min-height: 100%;
  overflow-y: scroll;
  font-family: fonts.$body-font, serif;
}

@each $level in (1, 2, 3, 4, 5, 6) {
  h#{$level},
  .h#{$level} {
    font-family: fonts.$h-font, sans-serif;
    font-size: fonts.h-font-size($level);
  }
}

h1 > small,
.h1 > small {
  font-size: calc(fonts.h-font-size(1) * 0.65);
}

h2,
.h2 {
  margin-block-end: spacers.$medium;
}

@each $level in (1, 2, 3) {
  h#{$level},
  .h#{$level} {
    margin-block-start: fonts.$h-margin-block-start-large;
  }
}

@each $level in (4, 5, 6) {
  h#{$level},
  .h#{$level} {
    margin-block-start: fonts.$h-margin-block-start-small;
  }
}

@each $level in (1, 2) {
  h#{$level},
  .h#{$level} {
    + section {
      h#{$level + 1}:first-child,
      .h#{$level + 1}:first-child {
        margin-block-start: fonts.$h-margin-block-start-small;
      }
    }
  }
}

a {
  @extend .link-primary;
  text-decoration: none;

  :focus,
  :hover {
    text-decoration: underline;
  }
}

b,
strong {
  font-weight: fonts.$font-weight-semibold;
}

dt,
th {
  font-family: fonts.$sans-serif-font;
}

.dl-compact {
  dt {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    float: inline-start;
    width: fonts.$dl-horizontal-offset;
    clear: inline-end;
    text-align: start;
  }

  dd {
    @include clearfix;
    line-height: fonts.$line-height-computed * 0.75;
    margin-inline-start: fonts.$dl-horizontal-offset;

    p {
      line-height: fonts.$line-height-computed;
    }

    pre {
      margin-block-end: 0;
    }
  }
}

.dl-compact > dd::after {
  display: inline-block;
}

.dl-summary-callout dd {
  margin-block-end: fonts.$line-height-computed * 0.5;
}

dd > p {
  margin-block-end: 0;
}

.page-header {
  border-block-end: 0;
  margin: 0 0 spacers.$large;
  padding-block-end: spacers.$x-small;
}

.property-type {
  margin-inline-start: fonts.$font-size-base;
}

.signature-params,
.signature-returns {
  color: colors.$code-light-gray;
}

.source-link {
  font-size: fonts.$font-size-base * 0.9;
  margin-block-start: calc(spacers.$x-small * -1);
}

.summary-callout,
.symbol-index-section {
  font-size: fonts.$font-size-base * 0.9;
}

.summary-callout-heading,
.symbol-index-section-heading {
  @extend .h4;
  // TODO: Use color from standard palette.
  color: bootstrap.$info;
  font-size: 1.125rem;
  margin-block-start: fonts.$h-margin-block-start-small;
  border-block-end: 0;
}

// Use larger text in the first paragraph of the description
.symbol-classdesc,
.symbol-description {
  p:first-child {
    margin-block-end: fonts.$line-height-computed * 1.1;
    font-size: fonts.$font-size-base * 1.5;
    line-height: fonts.$line-height-computed * 1.5;
    font-weight: 300;
  }
}

.h.symbol-params,
.h.symbol-properties {
  font-size: fonts.h-font-size(4) * 0.9;
}

.symbol-index-list > dd {
  margin-block-end: 0.75em;
}

.symbol-index-name {
  text-indent: -1em;
  margin-inline-start: 1em;
}

.symbol-name {
  font-weight: bold;
}

.summary-callout,
.symbol-index {
  padding: 0;
}

.summary-content,
.symbol-index-section {
  padding: 0 spacers.$medium 0 0;
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
}

.jsdoc-main {
  display: flex;
  flex: 1 1 auto;
  width: 100%;
  padding-block-start: navbar.$height;
}

.jsdoc-content {
  flex: 1 1 auto;
  height: 100%;
  padding: spacers.$xx-large;

  // If there are badges before an element, then make sure the navbar doesn't cover the badges when
  // the user scrolls to that element.
  .symbol-detail-badges + [id] {
    --navbar-scroll-margin: var(--navbar-scroll-margin-large);
  }
}

.jsdoc-footer {
  align-self: end;
  justify-self: stretch;
  width: 100%;
  padding: spacers.$medium;
  background-color: colors.$zinc-100;
  border-block-start: 1px solid colors.$zinc-300;

  p {
    margin: 0;
    text-align: center;
  }
}

/* Tables */

.jsdoc-details-table {
  @extend .table;
  @extend .table-hover;
}

.jsdoc-details-table > thead > tr {
  border-block-end-width: 2px;
}

.jsdoc-details-table > tbody > tr:last-child {
  border-block-end-color: #fff0;
}

td > p:last-child {
  margin-block-end: 0;
}

article td,
article th {
  @extend .table-sm;
  padding-inline-start: 0;
}

/* Callouts */

.summary-callout {
  border-radius: 0.2rem;
  padding: 0 1em 0 1em;
  margin: 1em 0 1em 0;
  border: 1px solid colors.$zinc-300;
  border-inline-start-width: 1em;
  // TODO: Use color from standard palette.
  border-inline-start-color: bootstrap.$info;
}
