/*
  Copyright 2022 the Baseline Authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
*/

@use 'sass:color';

@import 'bootstrap';

@import 'badges';
@import 'hljs';
@import 'themes/hljs/tomorrow';
@import 'toc';
@import 'variables/colors';
@import 'variables/fonts';
@import 'variables/navbar';
@import 'variables/spacers';

@mixin source-code() {
  @extend pre;
  @include border-radius(0.2rem);
  // TODO: Global: Use colors from palette.scss.
  background-color: $gray-100;
  border: 1px solid $gray-300;
  // TODO: increase bottom margin
  margin: 0 0 0.7rem;
  padding: 0.6rem;
}

html {
  position: relative;
  height: 100%;
}

body {
  display: flex;
  flex-flow: column;
  min-height: 100%;
  overflow-y: scroll;
  font-family: $body-font, serif;
}

$h-font-sizes: (
  1: $h1-font-size,
  2: $h2-font-size,
  3: $h3-font-size,
  4: $h4-font-size,
  5: $h5-font-size,
  6: $h6-font-size,
);

@each $level in (1, 2, 3, 4, 5, 6) {
  h#{$level},
  .h#{$level} {
    font-family: $h-font, sans-serif;
    font-size: map-get($map: $h-font-sizes, $key: $level);
  }
}

h1 > small,
.h1 > small {
  font-size: $h1-font-size * 0.65;
}

h1,
.h1,
h2,
.h2 {
  border-block-end: 1px solid $gray-300;
}

@each $level in (1, 2, 3) {
  h#{$level},
  .h#{$level} {
    margin-block-start: $h-margin-block-start-large;
  }
}

@each $level in (4, 5, 6) {
  h#{$level},
  .h#{$level} {
    margin-block-start: $h-margin-block-start-small;
  }
}

@each $level in (1, 2) {
  h#{$level},
  .h#{$level} {
    + section {
      h#{$level + 1}:first-child,
      .h#{$level + 1}:first-child {
        margin-block-start: $h-margin-block-start-small;
      }
    }
  }
}

a {
  @extend .link-primary;
  text-decoration: none;

  :focus,
  :hover {
    text-decoration: underline;
  }
}

pre {
  @include source-code();

  > code {
    background-color: inherit;
    font-size: $code-font-size;
    padding: 0;
  }
}

code {
  font-family: $code-font, monospace;
  font-size: 100%;
  font-variant-ligatures: none;
  background-color: tint-color($code-color, 95%);
  border-radius: 0.25rem;
  padding: $spacer-3x-small $spacer-2x-small;
}

b,
strong {
  font-weight: $font-weight-semibold;
}

dt,
th {
  font-family: $sans-serif-font;
}

.dl-compact {
  @include media-breakpoint-up(md) {
    dt {
      @include text-truncate();
      float: inline-start;
      width: $dl-horizontal-offset;
      clear: inline-end;
      text-align: end;
    }

    dd {
      margin-inline-start: $dl-horizontal-offset;
    }
  }

  dt {
    text-align: left;
  }

  dd {
    @extend .clearfix;
    line-height: $line-height-computed * 0.75;

    p {
      line-height: $line-height-computed;
    }

    pre {
      margin-block-end: 0;
    }
  }
}

.dl-compact > dd::after {
  display: inline-block;
}

.dl-summary-callout dd {
  margin-block-end: $line-height-computed * 0.5;
}

dd > p {
  margin-block-end: 0;
}

.line-number {
  @extend .text-end;
  color: $code-light-gray;
  user-select: none;
  white-space: pre-line;
  border: none;
}

.page-header {
  border-block-end: 0;
  margin: 0 0 $spacer-large;
  padding-block-end: $spacer-x-small;
}

.property-type {
  margin-inline-start: $font-size-base;
}

.signature-params,
.signature-returns {
  color: $code-light-gray;
}

.source-code {
  @include source-code();
  overflow-x: auto;
}

.source-link {
  font-size: $font-size-base * 0.9;
  margin-block-start: -$spacer-x-small;
}

.summary-callout,
.symbol-index-section {
  font-size: $font-size-base * 0.9;
}

.summary-callout-heading,
.symbol-index-section-heading {
  @extend .h4;
  // TODO: Change color scheme
  color: $info;
  font-size: 1.125rem;
  margin-block-start: $h-margin-block-start-small;
  border-block-end: 0;
}

// Use larger text in the first paragraph of the description
.symbol-classdesc,
.symbol-description {
  p:first-child {
    margin-block-end: $line-height-computed * 1.1;
    font-size: $font-size-base * 1.1;
    font-weight: 300;
    line-height: $line-height-computed * 1.1;

    @include media-breakpoint-up(md) {
      font-size: $font-size-base * 1.5;
      line-height: $line-height-computed * 1.5;
    }
  }
}

.h.symbol-params,
.h.symbol-properties {
  font-size: $h4-font-size * 0.9;
}

.symbol-detail-badges {
  font-size: $font-size-base * 0.8;
  font-weight: bold;
  margin-block-start: $h-margin-block-start-large;
  margin-block-end: $font-size-base * 0.25;
}

// Remove whitespace before the first set of badges to follow an h2, and before badges in a header.
h2 + section > .symbol-detail-badges:first-child,
.h2 + section > .symbol-detail-badges:first-child,
header > .symbol-detail-badges {
  margin-block-start: 0;
}

// Remove whitespace before a heading that follows a set of badges.
@each $level in (1, 2, 3, 4, 5, 6) {
  .symbol-detail-badges + h#{$level} {
    margin-block-start: 0;
  }
}

.symbol-index-list > dd {
  margin-block-end: 0.75em;
}

.symbol-index-name {
  text-indent: -1em;
  margin-inline-start: 1em;
}

.symbol-name {
  font-weight: bold;
}

.hljs {
  margin-inline-start: 1em;
  padding-inline-start: 0;
}

.line-number {
  grid-area: linenum;
  padding-inline-end: $spacer-medium;
}

.source-code {
  grid-area: code;
  width: 100%;
  margin: auto;
}

.source-code.source-code-numbered {
  display: grid;
  grid:
    [row1-start] 'linenum code' max-content [row1-end]
    / max-content max-content;
  margin: $spacer-small 0;
  padding: 1.5rem $spacer-x-small;
}

.summary-callout,
.symbol-index {
  padding: 0;
}

.summary-content,
.symbol-index-section {
  padding: 0 $spacer-medium 0 0;
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
}

.jsdoc-main {
  display: flex;
  flex: 1 1 auto;
  width: 100%;
  padding-block-start: $navbar-height;
}

.jsdoc-content {
  flex: 1 1 auto;
  height: 100%;
  padding-block-start: $spacer-2x-large;
  padding-block-end: $spacer-2x-large;
  padding-inline-start: $spacer-3x-large;
}

.jsdoc-summary {
  margin-inline-end: $spacer-medium;
}

.jsdoc-footer {
  align-self: end;
  justify-self: stretch;
  width: 100%;
  padding: $spacer-medium;
  background-color: $gray-100;
  border-block-start: 1px solid $gray-300;

  p {
    margin: 0;
    text-align: center;
  }
}

/* Navigation */

.jsdoc-navbar {
  position: fixed;
  top: 0;
  width: 100%;
  z-index: $navbar-z-index;
  background-color: $toc-background-color;
  margin-block-end: 0;
  box-shadow:
    $shadow-offset-x-primary $shadow-offset-y-primary $shadow-blur-primary $shadow-spread-primary
      color.change($shadow-color, $alpha: $shadow-alpha-primary),
    $shadow-offset-x-secondary $shadow-offset-y-secondary $shadow-blur-secondary
      $shadow-spread-secondary color.change($shadow-color, $alpha: $shadow-alpha-secondary);
  padding: $spacer-medium $spacer-medium $spacer-medium $spacer-large;
}

.jsdoc-navbar-package-name {
  @extend .navbar-brand;
  font-family: $h-font, sans-serif;
  font-size: 1.1rem;
}

/* Tables */

.jsdoc-details-table {
  @extend .table;
  @extend .table-hover;
}

.jsdoc-details-table > thead > tr {
  border-block-end-width: 2px;
}

.jsdoc-details-table > tbody > tr:last-child {
  border-block-end-color: #fff0;
}

td > p:last-child {
  margin-block-end: 0;
}

article td,
article th {
  @extend .table-sm;
  padding-inline-start: 0;
}

/* Callouts */

.summary-callout {
  @include border-radius(0.2rem);
  padding: 0 1em 0 1em;
  margin: 1em 0 1em 0;
  border: 1px solid $gray-300;
  border-inline-start-width: 1em;
  border-inline-start-color: $info;
}
