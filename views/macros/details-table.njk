{#-
  Copyright 2014 the Baseline Authors.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      https://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-#}

{%- macro detailsTableName(value) -%}
  <td class="details-table-name">
    <p>
      {%- if value.name -%}
        <code><strong>{{ value.name }}</strong></code>
      {%- else -%}
        <strong>{{ 'tables.notApplicable' | translate }}</strong>
      {%- endif -%}
    </p>
  </td>
{%- endmacro -%}

{%- macro detailsTableDescription(value, isEnum) -%}
  {% if value.type and value.type.expression -%}
    {%- set typeExpression = value.type.expression -%}
  {%- else -%}
    {%- set typeExpression = null -%}
  {%- endif -%}

  <td class="details-table-description">
    {% if value.optional or typeExpression -%}
      <p class="details-table-type">
        {#- TODO: Handle this in `hasModifiers`. -#}
        {% if value.optional -%}
          {{ 'tables.body.optional.short' | translate }}&nbsp;
        {%- endif -%}
        {%- if typeExpression -%}
          <code>{{ typeExpression | linkifyTypeExpression }}</code>
        {%- else -%}
          &nbsp;
        {%- endif %}
      </p>
    {%- endif %}
    {% if value.description -%}
      {{ value.description | markdown | resolveLinks }}
    {%- endif %}
    {% if value | hasModifiers(isEnum=isEnum) -%}
      <p>{{ value | modifierText(isEnum=isEnum) }}</p>
    {%- endif %}
    {% if value.children -%}
      <p>{{ 'tables.body.eachValueHasProperties' | translate(1, name=value.name) }}</p>
      {{ detailsTable(value.children) }}
    {%- endif %}
  </td>
{%- endmacro -%}

{%- macro detailsTableRow(value, isEnum) -%}
  <tr>
    {{ detailsTableName(value) }}
    {{ detailsTableDescription(value, isEnum) }}
  </tr>
{%- endmacro -%}

{#-
  This table is implemented as a macro so that it can be called recursively, without shadowing or
  overwriting variables in a parent scope.
-#}
{%- macro detailsTable(values, isEnum)-%}
  <table class="jsdoc-details-table">
    <thead>
      <tr>
        <th>{{ 'tables.header.name' | translate }}</th>
        <th>{{ 'tables.header.description' | translate }}</th>
      </tr>
    </thead>
    <tbody>
      {% for value in values -%}
        {{ detailsTableRow(value, isEnum) }}
      {%- endfor %}
    </tbody>
  </table>
{%- endmacro -%}
